{"version":3,"sources":["script.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","context","state","protoGenerator","Generator","generator","create","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","2","_regeneratorRuntime","_regeneratorRuntime2","__esModule","default","_asyncToGenerator","gen","apply","arguments","step","question","questionTitle","document","querySelector","questionAnswers","questionCount","scoreText","nextQuestionBtn","endGameH2","btnNew","score","_ref2","_ref3","getQuestion","_callee","response","data","_context","fetch","status","json","results","incorrect_answers","correct_answer","waitingData","_callee2","_context2","renderQuestion","questionNumber","classList","remove","innerHTML","addEventListener","textContent","j","Math","floor","random","_ref","shuffle","divBtn","createElement","add","btnAnswer","appendChild","iCorrect","iNotCorrect","querySelectorAll","currentBtn","target","insertAdjacentElement","regenerator-runtime"],"mappings":"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","file":"script.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar regeneratorRuntime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _regeneratorRuntime = require('regenerator-runtime');\n\nvar _regeneratorRuntime2 = _interopRequireDefault(_regeneratorRuntime);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar question = [];\nvar questionNumber = 0;\nvar questionTitle = document.querySelector('.question__title');\nvar questionAnswers = document.querySelector('.question__answers');\nvar questionCount = document.querySelector('.status__count');\nvar scoreText = document.querySelector('.status__score');\nvar nextQuestionBtn = document.querySelector('.btn-next');\nvar endGameH2 = document.querySelector('.end-game');\nvar btnNew = document.querySelector('.btn-new');\nvar score = 0;\n\n// RANDOMIZE ANSWERS ARRAY\nfunction shuffle(a) {\n    for (var i = a.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [a[j], a[i]];\n        a[i] = _ref[0];\n        a[j] = _ref[1];\n    }\n    return a;\n}\n\nvar getQuestion = function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime2.default.mark(function _callee() {\n        var response, data, i;\n        return _regeneratorRuntime2.default.wrap(function _callee$(_context) {\n            while (1) {\n                switch (_context.prev = _context.next) {\n                    case 0:\n                        _context.next = 2;\n                        return fetch('https://opentdb.com/api.php?amount=10&category=22&type=multiple');\n\n                    case 2:\n                        response = _context.sent;\n\n                        if (!(response.status === 200)) {\n                            _context.next = 11;\n                            break;\n                        }\n\n                        _context.next = 6;\n                        return response.json();\n\n                    case 6:\n                        data = _context.sent;\n\n                        for (i = 0; i < 10; i++) {\n                            data.results[i].incorrect_answers.push(data.results[i].correct_answer);\n                        }\n                        question = data.results;\n                        _context.next = 12;\n                        break;\n\n                    case 11:\n                        throw new Error('Unable to fetch');\n\n                    case 12:\n                    case 'end':\n                        return _context.stop();\n                }\n            }\n        }, _callee, undefined);\n    }));\n\n    return function getQuestion() {\n        return _ref2.apply(this, arguments);\n    };\n}();\n\nvar waitingData = function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime2.default.mark(function _callee2() {\n        return _regeneratorRuntime2.default.wrap(function _callee2$(_context2) {\n            while (1) {\n                switch (_context2.prev = _context2.next) {\n                    case 0:\n                        _context2.next = 2;\n                        return getQuestion();\n\n                    case 2:\n                        questionNumber = 0;\n                        renderQuestion(questionNumber);\n\n                    case 4:\n                    case 'end':\n                        return _context2.stop();\n                }\n            }\n        }, _callee2, undefined);\n    }));\n\n    return function waitingData() {\n        return _ref3.apply(this, arguments);\n    };\n}();\n\nwaitingData();\n\nvar renderQuestion = function renderQuestion(questionNumber) {\n    var answer = '';\n    nextQuestionBtn.classList.remove('isVisible');\n    questionTitle.innerHTML = question[questionNumber].question;\n\n    btnNew.addEventListener('click', function () {\n        score = 0;\n        endGameH2.textContent = '';\n        waitingData();\n    });\n\n    //RANDOMIZE ANSWERS ARRAY\n    shuffle(question[questionNumber].incorrect_answers);\n\n    //CLEAN ANSWERS BOX\n    questionAnswers.innerHTML = '';\n\n    questionCount.textContent = 'Question : ' + (questionNumber + 1) + '/' + question.length;\n    scoreText.textContent = 'Score : ' + score;\n\n    for (var i = 0; i < 4; i++) {\n        var divBtn = document.createElement('div');\n        divBtn.classList.add('question__box');\n        var btnAnswer = document.createElement('button');\n        questionAnswers.appendChild(divBtn);\n        btnAnswer.classList.add('btn-answers');\n        btnAnswer.innerHTML = question[questionNumber].incorrect_answers[i];\n        divBtn.appendChild(btnAnswer);\n    }\n\n    var iCorrect = document.createElement('i');\n    iCorrect.classList.add('fas', 'fa-check');\n\n    var iNotCorrect = document.createElement('i');\n    iNotCorrect.classList.add('fas', 'fa-times');\n\n    var buttons = document.querySelectorAll('.btn-answers');\n    buttons.forEach(function (currentBtn) {\n        currentBtn.addEventListener('click', function (e) {\n            answer = e.target.textContent;\n            if (answer === question[questionNumber].correct_answer) {\n                score += 1;\n                currentBtn.classList.add('correct');\n                currentBtn.insertAdjacentElement('afterend', iCorrect);\n            } else {\n                currentBtn.classList.add('incorrect');\n                currentBtn.insertAdjacentElement('afterend', iNotCorrect);\n            }\n\n            questionNumber++;\n            if (questionNumber < 10) {\n                nextQuestionBtn.classList.add('isVisible');\n                nextQuestionBtn.addEventListener('click', function () {\n                    renderQuestion(questionNumber);\n                });\n            } else {\n                nextQuestionBtn.classList.remove('isVisible');\n                endGameH2.textContent = 'Your final score is : ' + score;\n            }\n        });\n    });\n};\n\n},{\"regenerator-runtime\":1}]},{},[2]);\n"]}